beta.s= 0.2,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
library(quantreg)
library(splines)
SEIR.model<-function (init, beta.s, gamma.e, gamma.i, times) {
library(deSolve)
seir <- function(time, state, parameters) {
with(as.list(c(state, parameters)), {
dS <- -beta.s * S * I
dE <- beta.s * S * I - gamma.e * E
dI <- gamma.e * E - gamma.i * I
dR <- gamma.i * I
return(list(c(dS, dE, dI, dR)))
})
}
parameters <- c(beta.s = beta.s, gamma.e = gamma.e, gamma.i = gamma.i)
out <- ode(y = init, times = times, func = seir, parms = parameters)
out <- as.data.frame(out)
out$time <- NULL
return(out)
}
plot.func <- function (Tm, beta.s, gamma.e, gamma.i, p, Y, X) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
matplot(x = 1:Tm, y = mod, type = "l", xlab = "Time", ylab = "Susceptible, Exposed, Infectious, and Recovered", main = "SEIR Model", lwd = 1, lty = 1, bty = "l", col = 1:4)
xmax <- quantile(X, 0.975)
matplot(x = 1:Tm, y = t(X), ylim = c(0, xmax), type = "p", xlab = "Time", ylab = "RNA levels", main = "", pch = 1, col = 1)
Yv <- as.vector(Y)
Xv <- as.vector(X)
BX <- bs(Xv, df = 10)
fit1 <- rq(Yv ~ BX, 0.05)
fit2 <- rq(Yv ~ BX, 0.25)
fit3 <- rq(Yv ~ BX, 0.5)
fit4 <- rq(Yv ~ BX, 0.75)
fit5 <- rq(Yv ~ BX, 0.95)
plot(Xv, Yv, xlab = "RNA levels", ylab = "Active COVID-19 Cases", col = "gray", xlim = c(0, xmax))
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit1), col = "red")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit2), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit3), col = "blue")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit4), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit5), col = "red")
abline(0, 0)
abline(500, 0)
abline(1000, 0)
abline(1500, 0)
abline(2000, 0)
abline(2500, 0)
abline(3000, 0)
abline(3500, 0)
abline(4000, 0)
abline(4500, 0)
abline(5000, 0)
abline(0, 0, lty = "dashed", col = "gray")
abline(500, 0, lty = "dashed", col = "gray")
abline(1000, 0, lty = "dashed", col = "gray")
abline(1500, 0, lty = "dashed", col = "gray")
abline(2000, 0, lty = "dashed", col = "gray")
abline(2500, 0, lty = "dashed", col = "gray")
abline(3000, 0, lty = "dashed", col = "gray")
abline(3500, 0, lty = "dashed", col = "gray")
abline(4000, 0, lty = "dashed", col = "gray")
abline(4500, 0, lty = "dashed", col = "gray")
abline(5000, 0, lty = "dashed", col = "gray")
}
Sewage.sim<-function (Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
S <- mod[, 1]
I <- mod[, 3]
NC <- rpois(1:Tm, N * beta.s * S * I)
Tr <- round(1/gamma.e + 1/gamma.i)
NCA <- c(rep(0, (Tr - 1)), NC)
CI <- rep(-99, Tm)
for (i in 1:Tm) {
CI[i] <- sum(NCA[i:(Tr + i)])
}
Vmat <- NULL
for (i in 1:Tm) {
if (NC[i] > 0) {
Vmat <- rbind(Vmat, cbind(matrix(0, nrow = NC[i], ncol = (i - 1)), Viral.load.sim(NC[i], 1:30, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max,  G.mean, G.sd), matrix(0, nrow = NC[i], ncol = (Tm - i + 1))))
}
}
Vmat <- Vmat[, 1:Tm]
TV <- apply(Vmat, 2, sum)
tau0 <- rnorm(1, mu.tau0, sd.tau0)
Q <- rnorm(1, mu.Q, sd.Q)
tau.star <- tau0 * Q^(-(Temp - 20)/10)
OVL <- TV * (1/2)^(Ts/tau.star)
return(cbind(TV, CI, OVL))
}
Viral.load.sim <-function (n, t, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, G.mean, G.sd) {
max <- rnorm(n, mu.V.max, sd.V.max)
min <- rnorm(n, mu.V.20, sd.V.20)
G <- rnorm(n, G.mean, G.sd)
load <- NULL
for (i in 1:n) {
load.g <- 10^(t * max[i]/T.V.max) * (t <= T.V.max) + (t > T.V.max) * 10^(max[i] - (max[i] - min[i])/(20) * (t - T.V.max))
load <- rbind(load, G[i] * load.g)
}
return(load)
}
MC.COVID19.wastewater<-function (Sim, Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd){
par(mfcol = c(3, 1))
TV <- NULL
CI <- NULL
OVL <- NULL
for (i in 1:Sim) {
res <- Sewage.sim(Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd)
TV <- rbind(TV, res[, 1])
CI <- rbind(CI, res[, 2])
OVL <- rbind(OVL, res[, 3])
print(i)
}
plot.func(Tm, beta.s, gamma.e, gamma.i, p, CI, OVL)
}
# Beta = 0.2 i.e. R0 = 2
table[[2]] <- MC.COVID19.wastewater(Sim=100,
Tm=548,
beta.s= 0.2,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
# ------------------------------------------
# title: Modified code of COVID19Wastewater Package
# reference: COVID-19 wastewater epidemiology: a model to estimate infected populations
# original author: Christopher S McMahan et al.
# ref website: https://github.com/scwatson812/COVID19WastewaterModel
# ------------------------------------------
library(quantreg)
library(splines)
SEIR.model<-function (init, beta.s, gamma.e, gamma.i, times) {
library(deSolve)
seir <- function(time, state, parameters) {
with(as.list(c(state, parameters)), {
dS <- -beta.s * S * I
dE <- beta.s * S * I - gamma.e * E
dI <- gamma.e * E - gamma.i * I
dR <- gamma.i * I
dC <- beta.s * S * I
return(list(c(dS, dE, dI, dR, dC)))
})
}
parameters <- c(beta.s = beta.s, gamma.e = gamma.e, gamma.i = gamma.i)
out <- ode(y = init, times = times, func = seir, parms = parameters)
out <- as.data.frame(out)
out$time <- NULL
return(out)
}
plot.func <- function (Tm, beta.s, gamma.e, gamma.i, p, Y, X) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0, C = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
matplot(x = 1:Tm, y = mod, type = "l", xlab = "Time", ylab = "Susceptible, Exposed, Infectious, and Recovered (and culm cases)",
main = "SEIR Model", lwd = 1, lty = 1, bty = "l", col = 1:5)
xmax <- quantile(X, 0.975)
matplot(x = 1:Tm, y = t(X), ylim = c(0, xmax), type = "p", xlab = "Time", ylab = "RNA levels", main = "", pch = 1, col = 1)
Yv <- as.vector(Y)
Xv <- as.vector(X)
BX <- bs(Xv, df = 10)
fit1 <- rq(Yv ~ BX, 0.05)
fit2 <- rq(Yv ~ BX, 0.25)
fit3 <- rq(Yv ~ BX, 0.5)
fit4 <- rq(Yv ~ BX, 0.75)
fit5 <- rq(Yv ~ BX, 0.95)
plot(Xv, Yv, xlab = "RNA levels", ylab = "Active COVID-19 Cases", col = "gray", xlim = c(0, xmax))
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit1), col = "red")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit2), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit3), col = "blue")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit4), col = "green")
lines(sort(Xv), cbind(1, BX[order(Xv), ]) %*% coef(fit5), col = "red")
abline(0, 0)
abline(500, 0)
abline(1000, 0)
abline(1500, 0)
abline(2000, 0)
abline(2500, 0)
abline(3000, 0)
abline(3500, 0)
abline(4000, 0)
abline(4500, 0)
abline(5000, 0)
abline(0, 0, lty = "dashed", col = "gray")
abline(500, 0, lty = "dashed", col = "gray")
abline(1000, 0, lty = "dashed", col = "gray")
abline(1500, 0, lty = "dashed", col = "gray")
abline(2000, 0, lty = "dashed", col = "gray")
abline(2500, 0, lty = "dashed", col = "gray")
abline(3000, 0, lty = "dashed", col = "gray")
abline(3500, 0, lty = "dashed", col = "gray")
abline(4000, 0, lty = "dashed", col = "gray")
abline(4500, 0, lty = "dashed", col = "gray")
abline(5000, 0, lty = "dashed", col = "gray")
pred1 <- predict(loess(cbind(1, BX[order(Xv), ]) %*% coef(fit1)~sort(Xv)))
pred2 <- predict(loess(cbind(1, BX[order(Xv), ]) %*% coef(fit2)~sort(Xv)))
pred3 <- predict(loess(cbind(1, BX[order(Xv), ]) %*% coef(fit3)~sort(Xv)))
pred4 <- predict(loess(cbind(1, BX[order(Xv), ]) %*% coef(fit4)~sort(Xv)))
pred5 <- predict(loess(cbind(1, BX[order(Xv), ]) %*% coef(fit5)~sort(Xv)))
return(list(x=sort(Xv),
output1=pred1,
output2=pred2,
output3=pred3,
output4=pred4,
output5=pred5,
model=mod,
rna=t(X)))
}
Sewage.sim<-function (Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd) {
init <- c(S = 1 - p, E = p/2, I = p/2, R = 0, C = 0)
mod <- SEIR.model(init, beta.s = beta.s, gamma.e = gamma.e, gamma.i, 1:Tm)
S <- mod[, 1]
I <- mod[, 3]
NC <- rpois(1:Tm, N * beta.s * S * I)
Tr <- round(1/gamma.e + 1/gamma.i)
NCA <- c(rep(0, (Tr - 1)), NC)
CI <- rep(-99, Tm)
for (i in 1:Tm) {
CI[i] <- sum(NCA[i:(Tr + i)])
}
Vmat <- NULL
for (i in 1:Tm) {
if (NC[i] > 0) {
Vmat <- rbind(Vmat, cbind(matrix(0, nrow = NC[i], ncol = (i - 1)), Viral.load.sim(NC[i], 1:30, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max,  G.mean, G.sd), matrix(0, nrow = NC[i], ncol = (Tm - i + 1))))
}
}
Vmat <- Vmat[, 1:Tm]
TV <- apply(Vmat, 2, sum)
tau0 <- rnorm(1, mu.tau0, sd.tau0)
Q <- rnorm(1, mu.Q, sd.Q)
tau.star <- tau0 * Q^(-(Temp - 20)/10)
OVL <- TV * (1/2)^(Ts/tau.star)
return(cbind(TV, CI, OVL))
}
Viral.load.sim <-function (n, t, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, G.mean, G.sd) {
max <- rnorm(n, mu.V.max, sd.V.max)
min <- rnorm(n, mu.V.20, sd.V.20)
G <- rnorm(n, G.mean, G.sd)
load <- NULL
for (i in 1:n) {
load.g <- 10^(t * max[i]/T.V.max) * (t <= T.V.max) + (t > T.V.max) * 10^(max[i] - (max[i] - min[i])/(20) * (t - T.V.max))
load <- rbind(load, G[i] * load.g)
}
return(load)
}
MC.COVID19.wastewater<-function (Sim, Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd){
par(mfcol = c(3, 1))
TV <- NULL
CI <- NULL
OVL <- NULL
for (i in 1:Sim) {
res <- Sewage.sim(Tm, beta.s, gamma.e, gamma.i, p, N, mu.V.max, sd.V.max, mu.V.20, sd.V.20, T.V.max, Ts, Temp, mu.tau0, sd.tau0, mu.Q, sd.Q, G.mean, G.sd)
TV <- rbind(TV, res[, 1])
CI <- rbind(CI, res[, 2])
OVL <- rbind(OVL, res[, 3])
print(i)
}
values <- plot.func(Tm, beta.s, gamma.e, gamma.i, p, CI, OVL)
return(values)
}
# Beta = 0.2 i.e. R0 = 2
table[[2]] <- MC.COVID19.wastewater(Sim=100,
Tm=365,
beta.s= 0.2,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
### Very long run time
# Beta = 0.3 i.e. R0 = 3
table[[3]] <- MC.COVID19.wastewater(Sim=100,
Tm=365,
beta.s= 0.3,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.0001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
table[[3]]$rna
### Very long run time
# Beta = 0.3 i.e. R0 = 3
table[[3]] <- MC.COVID19.wastewater(Sim=100,
Tm=300,
beta.s= 0.3,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.0001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
table[[1]]$rna
ggplot(data=table[[1]], aes(x=1:300, y=rna)) +
geom_points()
rna_plot=table[[1]]
ggplot(data=table[[1]], aes(x=1:300, y=rna)) +
geom_points()
ggplot(data=rna_plot, aes(x=1:300, y=rna)) +
geom_points()
View(rna_plot)
rna_plot=cbind(1:548, table[[1]]$rna)
ggplot(data=rna_plot, aes(x=1:300, y=rna)) +
geom_points()
View(rna_plot)
View(rna_plot)
ggplot(data=rna_plot, aes(x=V1, y=V2:V100)) +
geom_points()
ggplot(data=rna_plot, aes(x=V1, y=V2:V101)) +
geom_points()
rna_plot <- cbind(1:548, table[[1]]$rna) %>%
pivot_long(V2:V101)
rna_plot <- cbind(1:548, table[[1]]$rna) %>%
pivot_longer(V2:V101)
rna_plot %<>% pivot_longer(V2:V101)
# install.packages('writexl')
library(tidyverse)
rna_plot %<>% pivot_longer(V2:V101)
rna_plot <- rna_plot %>% pivot_longer(V2:V101)
View(rna_plot)
class(rna_plot)
rna_plot <- as.data_frame(cbind(1:548, table[[1]]$rna))
rna_plot <- as.dataframe(cbind(1:548, table[[1]]$rna))
rna_plot <- as.data.frame(cbind(1:548, table[[1]]$rna))
class(rna_plot)
rna_plot <- rna_plot %>% pivot_longer(V2:V101)
ggplot(data=rna_plot, aes(x=V1, y=V2:V101)) +
geom_points()
ggplot(data=rna_plot, aes(x=V1, y=V2:V101)) +
geom_point()
ggplot(data=rna_plot, aes(x=V1, y=value)) +
geom_point()
# Beta = 0.15 i.e. R0 = 1.5
table[[1]] <- MC.COVID19.wastewater(Sim=100,
Tm=547,
beta.s= 0.15,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.0001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
# Beta = 0.2 i.e. R0 = 2
table[[2]] <- MC.COVID19.wastewater(Sim=100,
Tm=307,
beta.s= 0.2,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
### Very long run time
# Beta = 0.3 i.e. R0 = 3
table[[3]] <- MC.COVID19.wastewater(Sim=100,
Tm=307,
beta.s= 0.3,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.0001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
# Beta = 0.2 i.e. R0 = 2
table[[2]] <- MC.COVID19.wastewater(Sim=100,
Tm=547,
beta.s= 0.2,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
table[[2]]$rna
length(table[[2]]$rna)
### Very long run time
# Beta = 0.3 i.e. R0 = 3
table[[3]] <- MC.COVID19.wastewater(Sim=100,
Tm=307,
beta.s= 0.3,
gamma.e = 0.2,
gamma.i = 0.1,
p = 0.0001,
N = 100000,
mu.V.max = 7.6,
sd.V.max = 0.8,
mu.V.20 = 3.5,
sd.V.20 = 0.35,
T.V.max = 5,
Ts = 1.1,
Temp = 16,
mu.tau0 = 130,
sd.tau0 = 25,
mu.Q = 2.5,
sd.Q = 0.15,
G.mean = 128,
G.sd = 10
)
